// <auto-generated />
using System;
using AgroindustryManagement.Services.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgroindustryManagement.Migrations
{
    [DbContext(typeof(AGDatabaseContext))]
    partial class AGDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.21");

            modelBuilder.Entity("AgroindustryManagement.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Area")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Culture")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Fields", (string)null);
                });

            modelBuilder.Entity("AgroindustryManagement.Models.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("InventoryItems", (string)null);
                });

            modelBuilder.Entity("AgroindustryManagement.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignedToField")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FieldId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResourceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("ResourceId");

                    b.ToTable("Machines", (string)null);
                });

            modelBuilder.Entity("AgroindustryManagement.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CultureType")
                        .HasColumnType("INTEGER");

                    b.Property<double>("SeedPerHectare")
                        .HasColumnType("REAL");

                    b.Property<double>("WorkerPerHectare")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Resources", (string)null);
                });

            modelBuilder.Entity("AgroindustryManagement.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Warehouses", (string)null);
                });

            modelBuilder.Entity("AgroindustryManagement.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("TEXT");

                    b.Property<double>("HoursWorked")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Workers", (string)null);
                });

            modelBuilder.Entity("AgroindustryManagement.Models.WorkerTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EstimatesEndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("FieldId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Progress")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TaskType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkerTasks", (string)null);
                });

            modelBuilder.Entity("FieldWorker", b =>
                {
                    b.Property<int>("FieldId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FieldId", "WorkersId");

                    b.HasIndex("WorkersId");

                    b.ToTable("FieldWorker");
                });

            modelBuilder.Entity("AgroindustryManagement.Models.InventoryItem", b =>
                {
                    b.HasOne("AgroindustryManagement.Models.Warehouse", "Warehouse")
                        .WithMany("InventoryItems")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("AgroindustryManagement.Models.Machine", b =>
                {
                    b.HasOne("AgroindustryManagement.Models.Field", "Field")
                        .WithMany("Machines")
                        .HasForeignKey("FieldId");

                    b.HasOne("AgroindustryManagement.Models.Resource", "Resource")
                        .WithMany("RequiredMachines")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("AgroindustryManagement.Models.WorkerTask", b =>
                {
                    b.HasOne("AgroindustryManagement.Models.Field", "Field")
                        .WithMany("Tasks")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgroindustryManagement.Models.Worker", "Worker")
                        .WithMany("Tasks")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("FieldWorker", b =>
                {
                    b.HasOne("AgroindustryManagement.Models.Field", null)
                        .WithMany()
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgroindustryManagement.Models.Worker", null)
                        .WithMany()
                        .HasForeignKey("WorkersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AgroindustryManagement.Models.Field", b =>
                {
                    b.Navigation("Machines");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("AgroindustryManagement.Models.Resource", b =>
                {
                    b.Navigation("RequiredMachines");
                });

            modelBuilder.Entity("AgroindustryManagement.Models.Warehouse", b =>
                {
                    b.Navigation("InventoryItems");
                });

            modelBuilder.Entity("AgroindustryManagement.Models.Worker", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
